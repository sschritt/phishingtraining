<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Add" xml:space="preserve">
    <value>Add</value>
  </data>
  <data name="Anonymize" xml:space="preserve">
    <value>Anonymize</value>
  </data>
  <data name="Back" xml:space="preserve">
    <value>Back</value>
  </data>
  <data name="Campaign" xml:space="preserve">
    <value>Campaign</value>
  </data>
  <data name="Copy" xml:space="preserve">
    <value>Copy</value>
  </data>
  <data name="Copy to Clipboard" xml:space="preserve">
    <value>Copy to Clipboard</value>
  </data>
  <data name="Create" xml:space="preserve">
    <value>Create</value>
  </data>
  <data name="Delete" xml:space="preserve">
    <value>Delete</value>
  </data>
  <data name="Description" xml:space="preserve">
    <value>Description</value>
  </data>
  <data name="Details" xml:space="preserve">
    <value>Details</value>
  </data>
  <data name="Origin" xml:space="preserve">
    <value>Domain</value>
  </data>
  <data name="Edit" xml:space="preserve">
    <value>Edit</value>
  </data>
  <data name="End" xml:space="preserve">
    <value>End</value>
  </data>
  <data name="From" xml:space="preserve">
    <value>From</value>
  </data>
  <data name="Generate" xml:space="preserve">
    <value>Generate</value>
  </data>
  <data name="HeadTitle" xml:space="preserve">
    <value>{0} - Phishing Training</value>
  </data>
  <data name="Hello {0}!" xml:space="preserve">
    <value>Hello {0}!</value>
  </data>
  <data name="Invite Link" xml:space="preserve">
    <value>Invite Link</value>
  </data>
  <data name="Invite Link for Participants" xml:space="preserve">
    <value>Invite Link for Participants</value>
  </data>
  <data name="Login" xml:space="preserve">
    <value>Login</value>
  </data>
  <data name="Logout" xml:space="preserve">
    <value>Logout</value>
  </data>
  <data name="My Campaigns" xml:space="preserve">
    <value>My Campaigns</value>
  </data>
  <data name="Name" xml:space="preserve">
    <value>Name</value>
  </data>
  <data name="NumberOfMessagesPerParticipant" xml:space="preserve">
    <value>Messages / Participant</value>
  </data>
  <data name="Participants" xml:space="preserve">
    <value>Participants</value>
  </data>
  <data name="ParticipantsCount" xml:space="preserve">
    <value>Participants</value>
  </data>
  <data name="Phishing Training" xml:space="preserve">
    <value>Phishing Training</value>
  </data>
  <data name="Register" xml:space="preserve">
    <value>Register</value>
  </data>
  <data name="Remove" xml:space="preserve">
    <value>Remove</value>
  </data>
  <data name="Save" xml:space="preserve">
    <value>Save</value>
  </data>
  <data name="SenderAddress" xml:space="preserve">
    <value>Sender address</value>
  </data>
  <data name="SenderName" xml:space="preserve">
    <value>Sender name</value>
  </data>
  <data name="Start" xml:space="preserve">
    <value>Start</value>
  </data>
  <data name="Status" xml:space="preserve">
    <value>Status</value>
  </data>
  <data name="Strategy" xml:space="preserve">
    <value>Strategy</value>
  </data>
  <data name="Templates" xml:space="preserve">
    <value>Templates</value>
  </data>
  <data name="TemplateUsageCount" xml:space="preserve">
    <value>Template usage</value>
  </data>
  <data name="To" xml:space="preserve">
    <value>To</value>
  </data>
  <data name="Type" xml:space="preserve">
    <value>Type</value>
  </data>
  <data name="You are not managing any campaign" xml:space="preserve">
    <value>You are not managing any campaign</value>
  </data>
  <data name="You are not participating in any campaign" xml:space="preserve">
    <value>You are not participating in any campaign</value>
  </data>
  <data name="Do you want to join the campaign?" xml:space="preserve">
    <value>Do you want to join the campaign?</value>
  </data>
  <data name="Edit Campaign &quot;{0}&quot;" xml:space="preserve">
    <value>Edit Campaign "{0}"</value>
  </data>
  <data name="Join" xml:space="preserve">
    <value>Join</value>
  </data>
  <data name="Create Campaign" xml:space="preserve">
    <value>Create Campaign</value>
  </data>
  <data name="Campaign &quot;{0}&quot;" xml:space="preserve">
    <value>Campaign "{0}"</value>
  </data>
  <data name="TemplateType" xml:space="preserve">
    <value>Template type</value>
  </data>
  <data name="SubjectTemplate" xml:space="preserve">
    <value>Subject template</value>
  </data>
  <data name="Yes" xml:space="preserve">
    <value>Yes</value>
  </data>
  <data name="No" xml:space="preserve">
    <value>No</value>
  </data>
  <data name="User" xml:space="preserve">
    <value>User</value>
  </data>
  <data name="TimeToSend" xml:space="preserve">
    <value>Time to send</value>
  </data>
  <data name="ConfirmDeletion" xml:space="preserve">
    <value>Are you sure you want to delete this?</value>
  </data>
  <data name="Download Current Template" xml:space="preserve">
    <value>Download Current Template</value>
  </data>
  <data name="Choose file" xml:space="preserve">
    <value>Choose file</value>
  </data>
  <data name="TemplateFile" xml:space="preserve">
    <value>Template file</value>
  </data>
  <data name="CsvExport" xml:space="preserve">
    <value>CSV Export</value>
  </data>
  <data name="FromTimeOfDay" xml:space="preserve">
    <value>From time of day</value>
  </data>
  <data name="MinSecondsBetweenMessages" xml:space="preserve">
    <value>Min Sec between messages</value>
  </data>
  <data name="SenderKnown" xml:space="preserve">
    <value>Sender known</value>
  </data>
  <data name="ToTimeOfDay" xml:space="preserve">
    <value>To time of day</value>
  </data>
  <data name="NumberOfEMailMessagesPerParticipant" xml:space="preserve">
    <value>Emails</value>
  </data>
  <data name="NumberOfInstagramMessagesPerParticipant" xml:space="preserve">
    <value>Instagram</value>
  </data>
  <data name="NumberOfSMSMessagesPerParticipant" xml:space="preserve">
    <value>SMS</value>
  </data>
  <data name="NumberOfSnapchatMessagesPerParticipant" xml:space="preserve">
    <value>Snapchat</value>
  </data>
  <data name="NumberOfTikTokMessagesPerParticipant" xml:space="preserve">
    <value>TikTok</value>
  </data>
  <data name="NumberOfWhatsAppMessagesPerParticipant" xml:space="preserve">
    <value>WhatsApp</value>
  </data>
  <data name="SendType" xml:space="preserve">
    <value>Target</value>
  </data>
  <data name="Birthdate" xml:space="preserve">
    <value>Birthdate</value>
  </data>
  <data name="City" xml:space="preserve">
    <value>City</value>
  </data>
  <data name="ComputerOS" xml:space="preserve">
    <value>Computer OS</value>
  </data>
  <data name="Country" xml:space="preserve">
    <value>Country</value>
  </data>
  <data name="FatherFirstName" xml:space="preserve">
    <value>Father First Name</value>
  </data>
  <data name="FirstName" xml:space="preserve">
    <value>First Name</value>
  </data>
  <data name="Gender" xml:space="preserve">
    <value>Gender</value>
  </data>
  <data name="InstagramUserName" xml:space="preserve">
    <value>Instagram User Name</value>
  </data>
  <data name="LastName" xml:space="preserve">
    <value>Last Name</value>
  </data>
  <data name="MotherFirstName" xml:space="preserve">
    <value>Mother First Name</value>
  </data>
  <data name="PetName" xml:space="preserve">
    <value>Pet Name</value>
  </data>
  <data name="PhoneNumber" xml:space="preserve">
    <value>Phone Number</value>
  </data>
  <data name="PhoneOS" xml:space="preserve">
    <value>Phone OS</value>
  </data>
  <data name="PhoneProvider" xml:space="preserve">
    <value>Phone Provider</value>
  </data>
  <data name="RealData" xml:space="preserve">
    <value>I confirm the correctness of the data</value>
  </data>
  <data name="Street" xml:space="preserve">
    <value>Street</value>
  </data>
  <data name="Username" xml:space="preserve">
    <value>User Name</value>
  </data>
  <data name="FacebookUser" xml:space="preserve">
    <value>Facebook User</value>
  </data>
  <data name="InstagramUser" xml:space="preserve">
    <value>Instagram User</value>
  </data>
  <data name="TikTokUser" xml:space="preserve">
    <value>TikTok User</value>
  </data>
  <data name="NumberOfFacebookMessagesPerParticipant" xml:space="preserve">
    <value>Facebook</value>
  </data>
</root>